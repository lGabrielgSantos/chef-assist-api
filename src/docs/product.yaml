paths:
  /products:
    get:
      summary: Get all products
      tags: [Products]
      responses:
        200:
          description: List of all products
    post:
      summary: Create a new product
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        201:
          description: Product created successfully

  /products/{id}:
    get:
      summary: Get a product by ID
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Product found
        404:
          description: Product not found
    put:
      summary: Update a product by ID
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Product updated successfully
    delete:
      summary: Delete a product by ID
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Product deleted successfully

components:
  schemas:
    Product:
      type: object
      required: [name, price]
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Feijoada Gourmet"
        price:
          type: number
          example: 49.90
        description:
          type: string
          example: "Prato principal da casa"
